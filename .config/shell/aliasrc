## ALIASES  -------------------------------------- ##
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias ip='ip --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# changing 'ls' to 'lsd'
alias ls=lsd
alias l='ls -lh'
alias ll='ls -lAh'
alias la='ls -A'
alias lm='ls -m'
alias lr='ls -R'
alias lg='ls -l --group-directories-first'

alias df='df -h'
alias du='du -h'
alias cp='cp -iv'
alias mv='mv -i'
alias mkdir='mkdir -p'
alias free='free -m'
alias ping='ping -c 4'
alias trem='transmission-remote'
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"

alias cat='bat'
alias vv='vimv'
alias cat='bat'
alias vim='nvim'
alias lf='lfub'
alias bconf="nvim ~/.bashrc"
alias zconf="nvim ~/.config/zsh/.zshrc"

# git
alias ga='git add'
alias gc='git clone'
alias gd='git diff'
alias pull='git pull'
alias push='git push'
alias addup='git add --update'
alias addall='git add --all'
alias commit='git commit'
alias status='git status'

## FUNCTIONS  -------------------------------------- ##
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )

    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}

vo() {
    vim $(which $1)
}

yta() {
    yt-dlp --extract-audio --audio-format mp3 -o '~/Music/%(title)s.%(ext)s' $@
}

ytv() {
        yt-dlp $@
}

# FZF
fo() {
    IFS=$'\n' out=("$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
    key=$(head -1 <<< "$out")
    file=$(head -2 <<< "$out" | tail -1)
    if [ -n "$file" ]; then
        [ "$key" = ctrl-o ] && xdg-open "$file" || ${EDITOR:-vim} "$file"
    fi
}

ffvid() {
    if [ -n "$1" ]; then
        vid="$1"
        ffmpeg -i "$vid" -f mp3 -vn -ac 2 "${vid%.*}.mp3"
    else
        echo "Please supply a video file"
    fi
}

ffcut() {
    ffmpeg -i $1 -ss $3 -to $4 -c:a copy $2
}

# FZF
# change the default completion "path" to only complete files, and not files and dirs
_fzf_compgen_path() {
    rg --files --glob "!.git" . "$1"
}
_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}
_fzf_complete_git() {
    _fzf_complete -- "$@" < <(
        git --help -a | grep -E '^\s+' | awk '{print $1}'
    )
}
_fzf_comprun() {
    local command=$1
    shift

    case "$command" in
        git)
            _fzf_complete_git ;;
        *)
            fzf "$@" ;;
    esac
}

# vim:ft=bash
